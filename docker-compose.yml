version: "3"
services:
  # zookeeper:
  #   image: wurstmeister/zookeeper:3.4.6
  #   container_name: kafka-nahed-zookeeper
  #   ports:
  #     - 2181:2181
  # kafka:
  #   image: wurstmeister/kafka:2.11-1.1.0
  #   container_name: kafka-nahed-kafka
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_CREATE_TOPICS: sales-topic:1:1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   ports:
  #     - 9092:9092
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  # mongo:
  #   image: mongo
  #   container_name: mongo
  #   environment: 
  #     MONGO_USER: mongo
  #   ports:
  #     - 27017:27017
  # mysql:
  #   image: mysql/mysql-server
  #   container_name: mysql
  #   ports:
  #     - 3306:3306
  #   environment: 
  #     MYSQL_ROOT_PASSWORD: 123456789
  # buildozer:
  #   build: ./
  #   container_name: Nbuildozer
  #   depends_on: 
  #     - zookeeper
  #     - kafka
  #     # - mongo
  #     - mysql
  #   environment: 
  #     PORT: 8080
  #   ports:
  #     - 8080:8080
  # producer:
  #   build: ./services/producer
  #   container_name: kafka-nahed-producer
  #   command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://database:5432 npm start"
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   environment:
  #     PGHOST: database
  #     PGPORT: 5432
  #     PGUSER: ${POSTGRES_USER}
  #     PGDATABASE: ${POSTGRES_USER}
  #     PGPASSWORD: ${POSTGRES_PASSWORD}
  #     PRODUCER_PORT: ${PRODUCER_PORT}
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   ports:
  #     - ${PRODUCER_PORT}:${PRODUCER_PORT}
  # consumer:
  #   build: ./services/consumer
  #   container_name: kafka-nahed-consumer
  #   command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://database:5432 npm start"
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #     - database
  #   environment:
  #     PGHOST: database
  #     PGPORT: 5432
  #     PGUSER: ${POSTGRES_USER}
  #     PGDATABASE: ${POSTGRES_USER}
  #     PGPASSWORD: ${POSTGRES_PASSWORD}
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181


  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - 9092:9092
    environment:
      KAFKA_CREATE_TOPICS: "sales-topic:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock